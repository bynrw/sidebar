{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\GitHub\\\\sidebar\\\\src\\\\components\\\\layout\\\\FavoriteCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CustomCard from './CustomCard';\nimport { useFavoritesContext } from '../../App';\n\n/**\r\n * Wrapper für CustomCard mit Favoriten-Funktionalität\r\n * Diese Komponente kann in der gesamten Anwendung verwendet werden,\r\n * um die Favoriten-Funktionalität konsistent anzuwenden\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteCard = props => {\n  _s();\n  const {\n    isFavorite,\n    toggleFavorite\n  } = useFavoritesContext();\n\n  // Bereite die Daten für den toggleFavorite-Aufruf vor\n  // Icon ist ein React-Element und kann nicht direkt serialisiert werden\n  const handleToggleFavorite = () => {\n    // Erstelle eine neue Objektkopie ohne das Icon\n    const cardDataForStorage = {\n      ...props\n    };\n    // Entferne das Icon-Prop, da es nicht serialisiert werden kann\n    delete cardDataForStorage.icon;\n    // Bei der Anzeige von Favoriten wird das Icon dynamisch zugewiesen\n    // basierend auf dem iconType oder title\n    cardDataForStorage.iconType = props.title;\n    toggleFavorite(cardDataForStorage);\n  };\n  return /*#__PURE__*/_jsxDEV(CustomCard, {\n    ...props,\n    isFavorite: isFavorite(props.title),\n    onToggleFavorite: handleToggleFavorite\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteCard, \"NZZR/EAnyUQd4RnZXEMKYLZbnUk=\", false, function () {\n  return [useFavoritesContext];\n});\n_c = FavoriteCard;\nexport default FavoriteCard;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCard\");","map":{"version":3,"names":["React","CustomCard","useFavoritesContext","jsxDEV","_jsxDEV","FavoriteCard","props","_s","isFavorite","toggleFavorite","handleToggleFavorite","cardDataForStorage","icon","iconType","title","onToggleFavorite","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/GitHub/sidebar/src/components/layout/FavoriteCard.js"],"sourcesContent":["import React from 'react';\r\nimport CustomCard from './CustomCard';\r\nimport { useFavoritesContext } from '../../App';\r\n\r\n/**\r\n * Wrapper für CustomCard mit Favoriten-Funktionalität\r\n * Diese Komponente kann in der gesamten Anwendung verwendet werden,\r\n * um die Favoriten-Funktionalität konsistent anzuwenden\r\n */\r\nconst FavoriteCard = (props) => {\r\n  const { isFavorite, toggleFavorite } = useFavoritesContext();\r\n  \r\n  // Bereite die Daten für den toggleFavorite-Aufruf vor\r\n  // Icon ist ein React-Element und kann nicht direkt serialisiert werden\r\n  const handleToggleFavorite = () => {\r\n    // Erstelle eine neue Objektkopie ohne das Icon\r\n    const cardDataForStorage = { ...props };\r\n    // Entferne das Icon-Prop, da es nicht serialisiert werden kann\r\n    delete cardDataForStorage.icon;\r\n    // Bei der Anzeige von Favoriten wird das Icon dynamisch zugewiesen\r\n    // basierend auf dem iconType oder title\r\n    cardDataForStorage.iconType = props.title;\r\n    \r\n    toggleFavorite(cardDataForStorage);\r\n  };\r\n  \r\n  return (\r\n    <CustomCard\r\n      {...props}\r\n      isFavorite={isFavorite(props.title)}\r\n      onToggleFavorite={handleToggleFavorite}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FavoriteCard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,mBAAmB,QAAQ,WAAW;;AAE/C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM;IAAEC,UAAU;IAAEC;EAAe,CAAC,GAAGP,mBAAmB,CAAC,CAAC;;EAE5D;EACA;EACA,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,MAAMC,kBAAkB,GAAG;MAAE,GAAGL;IAAM,CAAC;IACvC;IACA,OAAOK,kBAAkB,CAACC,IAAI;IAC9B;IACA;IACAD,kBAAkB,CAACE,QAAQ,GAAGP,KAAK,CAACQ,KAAK;IAEzCL,cAAc,CAACE,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACEP,OAAA,CAACH,UAAU;IAAA,GACLK,KAAK;IACTE,UAAU,EAAEA,UAAU,CAACF,KAAK,CAACQ,KAAK,CAAE;IACpCC,gBAAgB,EAAEL;EAAqB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEN,CAAC;AAACZ,EAAA,CAxBIF,YAAY;EAAA,QACuBH,mBAAmB;AAAA;AAAAkB,EAAA,GADtDf,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}