{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\GitHub\\\\sidebar\\\\src\\\\components\\\\layout\\\\FavoriteCard.js\";\nimport React from 'react';\nimport CustomCard from './CustomCard';\nimport { useFavoritesContext } from '../../App';\n\n/**\r\n * Wrapper für CustomCard mit Favoriten-Funktionalität\r\n * Diese Komponente kann in der gesamten Anwendung verwendet werden,\r\n * um die Favoriten-Funktionalität konsistent anzuwenden\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteCard = props => {\n  const {\n    favorites,\n    handleFavoriteToggle\n  } = props;\n\n  // Bereite die Daten für den toggleFavorite-Aufruf vor\n  // Icon ist ein React-Element und kann nicht direkt serialisiert werden\n  const handleToggleFavorite = () => {\n    // Erstelle eine neue Objektkopie ohne das Icon\n    const cardDataForStorage = {\n      title: props.title,\n      path: props.path,\n      color: props.color || 'primary',\n      // Bei der Anzeige von Favoriten wird das Icon dynamisch zugewiesen\n      // basierend auf dem iconType oder title\n      iconType: props.iconType || props.title\n    };\n    handleFavoriteToggle(cardDataForStorage);\n  };\n\n  // Prüfe, ob die Karte ein Favorit ist\n  const checkIsFavorite = () => {\n    return favorites && favorites.some(fav => fav.title === props.title && fav.path === props.path);\n  };\n  return /*#__PURE__*/_jsxDEV(CustomCard, {\n    ...props,\n    isFavorite: checkIsFavorite(),\n    onToggleFavorite: handleToggleFavorite\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = FavoriteCard;\nexport default FavoriteCard;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCard\");","map":{"version":3,"names":["React","CustomCard","useFavoritesContext","jsxDEV","_jsxDEV","FavoriteCard","props","favorites","handleFavoriteToggle","handleToggleFavorite","cardDataForStorage","title","path","color","iconType","checkIsFavorite","some","fav","isFavorite","onToggleFavorite","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/GitHub/sidebar/src/components/layout/FavoriteCard.js"],"sourcesContent":["import React from 'react';\r\nimport CustomCard from './CustomCard';\r\nimport { useFavoritesContext } from '../../App';\r\n\r\n/**\r\n * Wrapper für CustomCard mit Favoriten-Funktionalität\r\n * Diese Komponente kann in der gesamten Anwendung verwendet werden,\r\n * um die Favoriten-Funktionalität konsistent anzuwenden\r\n */\r\nconst FavoriteCard = (props) => {\r\n  const { favorites, handleFavoriteToggle } = props;\r\n  \r\n  // Bereite die Daten für den toggleFavorite-Aufruf vor\r\n  // Icon ist ein React-Element und kann nicht direkt serialisiert werden\r\n  const handleToggleFavorite = () => {\r\n    // Erstelle eine neue Objektkopie ohne das Icon\r\n    const cardDataForStorage = { \r\n      title: props.title,\r\n      path: props.path,\r\n      color: props.color || 'primary',\r\n      // Bei der Anzeige von Favoriten wird das Icon dynamisch zugewiesen\r\n      // basierend auf dem iconType oder title\r\n      iconType: props.iconType || props.title\r\n    };\r\n    \r\n    handleFavoriteToggle(cardDataForStorage);\r\n  };\r\n  \r\n  // Prüfe, ob die Karte ein Favorit ist\r\n  const checkIsFavorite = () => {\r\n    return favorites && favorites.some(fav => \r\n      fav.title === props.title && fav.path === props.path\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <CustomCard\r\n      {...props}\r\n      isFavorite={checkIsFavorite()}\r\n      onToggleFavorite={handleToggleFavorite}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FavoriteCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,mBAAmB,QAAQ,WAAW;;AAE/C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,SAAS;IAAEC;EAAqB,CAAC,GAAGF,KAAK;;EAEjD;EACA;EACA,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,MAAMC,kBAAkB,GAAG;MACzBC,KAAK,EAAEL,KAAK,CAACK,KAAK;MAClBC,IAAI,EAAEN,KAAK,CAACM,IAAI;MAChBC,KAAK,EAAEP,KAAK,CAACO,KAAK,IAAI,SAAS;MAC/B;MACA;MACAC,QAAQ,EAAER,KAAK,CAACQ,QAAQ,IAAIR,KAAK,CAACK;IACpC,CAAC;IAEDH,oBAAoB,CAACE,kBAAkB,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOR,SAAS,IAAIA,SAAS,CAACS,IAAI,CAACC,GAAG,IACpCA,GAAG,CAACN,KAAK,KAAKL,KAAK,CAACK,KAAK,IAAIM,GAAG,CAACL,IAAI,KAAKN,KAAK,CAACM,IAClD,CAAC;EACH,CAAC;EAED,oBACER,OAAA,CAACH,UAAU;IAAA,GACLK,KAAK;IACTY,UAAU,EAAEH,eAAe,CAAC,CAAE;IAC9BI,gBAAgB,EAAEV;EAAqB;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEN,CAAC;AAACC,EAAA,GAjCInB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}